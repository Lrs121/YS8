<Window x:Class="YS8.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:YS8"
        xmlns:properties="clr-namespace:YS8.Properties"
        mc:Ignorable="d"
        Title="{x:Static properties:Resources.MainWindowTitle}" Height="650" Width="800"
        WindowStartupLocation="CenterScreen"
        AllowDrop="True" Drop="Window_Drop" PreviewDragOver="Window_PreviewDragOver">
    <Grid>
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="{x:Static properties:Resources.MenuFile}">
                    <MenuItem Header="{x:Static properties:Resources.MenuFileOpen}" Click="MenuItemFileOpen_Click"/>
                    <MenuItem Header="{x:Static properties:Resources.MenuFileForceOpen}" Click="MenuItemFileForceOpen_Click"/>
                    <MenuItem Header="{x:Static properties:Resources.MenuFileSave}" Click="MenuItemFileSave_Click"/>
                    <MenuItem Header="{x:Static properties:Resources.MenuFileSaveAs}" Click="MenuItemFileSaveAs_Click"/>
                    <Separator/>
                    <MenuItem Header="{x:Static properties:Resources.MenuExit}" Click="MenuItemExit_Click"/>
                </MenuItem>
                <MenuItem Header="{x:Static properties:Resources.MenuAbout}" Click="MenuItemAbout_Click"/>
            </Menu>
            <ToolBar DockPanel.Dock="Top">
                <Button Width="32" Height="32" Click="ToolBarFileOpen_Click" ToolTip="{x:Static properties:Resources.ToolTipOpen}">
                    <Image Source="{StaticResource Open}"/>
                </Button>
                <Button Width="32" Height="32" Click="ToolBarFileSave_Click" ToolTip="{x:Static properties:Resources.ToolTipSave}">
                    <Image Source="{StaticResource Save}"/>
                </Button>
            </ToolBar>
            <TabControl>
                <TabItem Header="{x:Static properties:Resources.TabItemBasic}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="50"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition Height="13*"/>
                        </Grid.RowDefinitions>
                        <Label Content="{x:Static properties:Resources.BasicPlayTime}"/>
                        <TextBox Grid.Column="1" Text="{Binding PlayTimeHour, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding PlayTimeMinute, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding PlayTimeSecond, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Grid.Column="2" Content="{x:Static properties:Resources.BasicPlayTimeHour}"/>
                        <Label Grid.Row="1" Grid.Column="2" Content="{x:Static properties:Resources.BasicPlayTimeMinute}"/>
                        <Label Grid.Row="2" Grid.Column="2" Content="{x:Static properties:Resources.BasicPlayTimeSecond}"/>
                    </Grid>
                </TabItem>
                <TabItem Header="{x:Static properties:Resources.TabItemCharacter}">
                    <TabItem.Resources>
                        <local:ItemIDConverter x:Key="ItemIDConverter"/>
                    </TabItem.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <ListBox Name="CharactorsList" ItemsSource="{Binding Charactors}" DisplayMemberPath="Name"/>
                        <Grid Grid.Column="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="80"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition Height="10*"/>
                            </Grid.RowDefinitions>
                            <Label Content="{x:Static properties:Resources.CharacterWeapon}"/>
                            <ComboBox Grid.Column="1" ItemsSource="{Binding Info.Items}"
                                      SelectedIndex="{Binding ElementName=CharactorsList, Path=SelectedItem.Weapon, Converter={StaticResource ItemIDConverter}}"
                                      DisplayMemberPath="Name"/>
                            <Label Grid.Row="1" Content="{x:Static properties:Resources.CharacterBody}"/>
                            <ComboBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Info.Items}"
                                      SelectedIndex="{Binding ElementName=CharactorsList, Path=SelectedItem.Body, Converter={StaticResource ItemIDConverter}}"
                                      DisplayMemberPath="Name"/>
                            <Label Grid.Row="2" Content="{x:Static properties:Resources.CharacterArm}"/>
                            <ComboBox Grid.Column="1" Grid.Row="2" ItemsSource="{Binding Info.Items}"
                                      SelectedIndex="{Binding ElementName=CharactorsList, Path=SelectedItem.Arm, Converter={StaticResource ItemIDConverter}}"
                                      DisplayMemberPath="Name"/>
                            <Label Grid.Row="3" Content="{x:Static properties:Resources.CharacterAccesory}"/>
                            <ComboBox Grid.Column="1" Grid.Row="3" ItemsSource="{Binding Info.Items}"
                                      SelectedIndex="{Binding ElementName=CharactorsList, Path=SelectedItem.Accesory1, Converter={StaticResource ItemIDConverter}}"
                                      DisplayMemberPath="Name"/>
                            <Label Grid.Row="4" Content="{x:Static properties:Resources.CharacterAccesory}"/>
                            <ComboBox Grid.Column="1" Grid.Row="4" ItemsSource="{Binding Info.Items}"
                                      SelectedIndex="{Binding ElementName=CharactorsList, Path=SelectedItem.Accesory2, Converter={StaticResource ItemIDConverter}}"
                                      DisplayMemberPath="Name"/>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="{x:Static properties:Resources.TabItemItems}">
                    <ListBox ItemsSource="{Binding Items}">
                        <ListBox.Resources>
                            <local:ItemCountVisibleConvertor x:Key="ItemCountVisibleConvertor"/>
                        </ListBox.Resources>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Label Content="{Binding Info.Name}" Width="200"/>
                                    <CheckBox VerticalAlignment="Center" IsChecked="{Binding Obtain}"/>
                                    <Label Content=" Count:" Visibility="{Binding Info.isCount, Converter={StaticResource ItemCountVisibleConvertor}}"/>
                                    <TextBox Text="{Binding Count, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Info.isCount, Converter={StaticResource ItemCountVisibleConvertor}}" Width="30"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </TabItem>
            </TabControl>
        </DockPanel>
    </Grid>
</Window>
